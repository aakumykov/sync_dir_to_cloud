plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.github.aakumykov.sync_dir_to_cloud'
    compileSdk 34

    defaultConfig {
        applicationId "com.github.aakumykov.sync_dir_to_cloud"
        minSdk 21
        targetSdk 34
        versionCode 7
        versionName "0.0.7-alpha"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
                arg("room.incremental", true)
            }
        }

        manifestPlaceholders = [YANDEX_CLIENT_ID:"87e03664d7e24970ba8b7661d25c7dcc"]
    }


    def keystorePropertiesFileName = "../local.properties"
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(file(keystorePropertiesFileName)))

    def keystoreFileKey = 'keystoreFile'
    def keystoreFile = keystoreProperties[keystoreFileKey]
    if (null == keystoreFile) throw new NullPointerException("There is no '"+keystoreFileKey+"' field in "+keystorePropertiesFileName)

    def keystorePasswordKey = 'keystorePassword'
    def keystorePassword = keystoreProperties[keystorePasswordKey]
    if (null == keystorePassword) throw new NullPointerException("There is no '"+keystorePasswordKey+"' field in "+keystorePropertiesFileName)

    /* Не называй переменную 'keyAlias' - это нарушает работу скрипта. */
    def keyAliasKey = 'keyAlias'
    def keystoreKeyAlias = keystoreProperties[keyAliasKey]
    if (null == keystoreKeyAlias) throw new NullPointerException("There is no '"+keyAliasKey+"' field in "+keystorePropertiesFileName)

    def keyPasswordKey = 'keyPassword'
    def keystoreKeyPassword = keystoreProperties[keyPasswordKey]
    if (null == keystoreKeyPassword) throw new NullPointerException("There is no '"+keyPassword+"' field in "+keystorePropertiesFileName)

    signingConfigs {
        release {
            storeFile = file(keystoreFile)
            storePassword = keystorePassword
            keyAlias = keystoreKeyAlias
            keyPassword = keystoreKeyPassword
        }
        debug {
            storeFile = file(keystoreFile)
            storePassword = keystorePassword
            keyAlias = keystoreKeyAlias
            keyPassword = keystoreKeyPassword
        }
    }


    buildFeatures {
        viewBinding true
//        compose true
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'retrofit2.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'retrofit2.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions 'stability', 'installation_source'

    productFlavors {
        working {
            dimension 'stability'
            getIsDefault().set(true)
        }
        experimental {
            dimension 'stability'
            applicationIdSuffix '.experimental'
        }
        local {
            dimension 'installation_source'
            applicationIdSuffix '.local'
        }
        google {
            dimension 'installation_source'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    /*composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }*/
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    /*constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }*/

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'

//    implementation 'androidx.fragment:fragment:1.6.2'

    implementation "androidx.fragment:fragment-ktx:1.6.2"
    implementation "androidx.activity:activity-ktx:1.8.2"

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    implementation 'androidx.test.ext:junit-ktx:1.2.1'

    testImplementation 'org.mockito:mockito-core:4.1.0'
    androidTestImplementation 'org.mockito:mockito-core:4.1.0'
    androidTestImplementation 'org.mockito:mockito-android:4.1.0'


    implementation 'com.github.aakumykov:single_live_event:0.0.1'
    implementation project(path: ':file_uploader')

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'

    implementation "androidx.room:room-runtime:2.6.1"
    annotationProcessor "androidx.room:room-compiler:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"

    implementation 'com.github.aakumykov:exception_utils:0.4'
    implementation 'com.yandex.android:authsdk:3.1.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

    implementation "androidx.work:work-runtime-ktx:2.9.0"

    implementation 'com.google.dagger:dagger:2.48.1'
    kapt 'com.google.dagger:dagger-compiler:2.48.1'

    // Compose
    /*def composeBom = platform('androidx.compose:compose-bom:2023.10.00')
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.material:material'

    implementation 'androidx.activity:activity-compose'

    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'*/


    // Optional - Integration with activities
//    implementation 'androidx.activity:activity-compose:1.7.2'
    // Optional - Integration with ViewModels
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    // Optional - Integration with LiveData
//    implementation 'androidx.compose.runtime:runtime-livedata'

    implementation "com.github.permissions-dispatcher:ktx:1.1.4"

    implementation 'com.github.aakumykov:cloud_reader_2:3.3.0-alpha'
    implementation 'com.github.aakumykov:cloud_writer_2:6.3.1-alpha'

    implementation 'com.github.aakumykov:storage_access_helper:2.0.0-alpha'

    def fileListerNavigatorSelectorVersion = '10.0.6-alpha'
    implementation "com.github.aakumykov:file_lister_navigator_selector_2:$fileListerNavigatorSelectorVersion"
//    implementation "com.github.aakumykov:local_file_lister_navigator_selector:$fileListerNavigatorSelectorVersion"
//    implementation "com.github.aakumykov:yandex_disk_file_lister_navigator_selector:$fileListerNavigatorSelectorVersion"
//    implementation "com.github.aakumykov:storage_lister:$fileListerNavigatorSelectorVersion"

    implementation "com.github.aakumykov:android_storage_lister:0.0.1-alpha"

    implementation "com.leinardi.android:speed-dial:3.3.0"

    implementation 'com.github.aakumykov:list_holding_list_adapter:0.0.5-alpha'
}
